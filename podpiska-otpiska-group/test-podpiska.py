from telethon import TelegramClient, events, types
from telethon.tl.functions.channels import JoinChannelRequest
from telethon.tl.functions.channels import GetFullChannelRequest
import asyncio
import random
import time
import os


# –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ API ID –∏ API Hash, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ https://my.telegram.org
api_id = 'your_id'
api_hash = 'your_hash'

# –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Å–µ—Å—Å–∏—è
phone_number = 'your_phone'
session_name = '/home/redos/podpiska-otpiska-group/session_name.session'

# üîπ –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
AUTH_CODE_FILE = "/home/redos/auth_code.txt"

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
client = TelegramClient(session_name, api_id, api_hash)


async def authenticate():
    """ –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–¥–∞ """
    while True:
        try:
            while True:
                # üîπ –û–∂–∏–¥–∞–µ–º –∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞
                if os.path.exists(AUTH_CODE_FILE):
                    with open(AUTH_CODE_FILE, "r") as file:
                        auth_code = file.read().strip()

                    if auth_code:
                        print(f"üì• –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥: {auth_code}")
                        await client.sign_in(phone_number, code=auth_code)
                        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è!")
                        return
                print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–¥–∞...")
                time.sleep(5)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")

        print("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...")
        time.sleep(210)  # –ñ–¥–µ–º 210 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
def read_channels_from_file(filename):
    with open(filename, 'r', encoding='utf-8') as file:
        return [line.strip() for line in file.readlines()]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
def add_to_blacklist(channel, filename):
    with open(filename, 'a', encoding='utf-8') as file:
        file.write(channel + '\n')


async def main():
    await client.connect()

    if not await client.is_user_authorized():
        print("üîë –ë–æ—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞...")
        # üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
        print("üì© –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É Telegram...")
        await client.send_code_request(phone_number)
        print("‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ Telegram –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ auth_code.txt")
        time.sleep(240)
        await authenticate()

    print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã...")

    i=0
    #–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã
    channels = read_channels_from_file('/home/redos/podpiska-otpiska-group/sort-tg-food-baza')
    for channel in channels:
        try:
            i+=1
            time.sleep(5)
#–Ω–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–æ–≤
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
            full_chat = await client(GetFullChannelRequest(channel))
#            print(f"Log: {full_chat.full_chat.linked_chat_id}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
            if full_chat.full_chat.linked_chat_id is not None:
                print(f"{i}) –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã.")
                print(f"ID —á–∞—Ç–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {full_chat.full_chat.linked_chat_id}")
                await client(JoinChannelRequest(channel))
                print(f"–ü–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª {channel}.")
            else:
                print(f"{i}) –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel}")
                add_to_blacklist(channel, '/home/redos/podpiska-otpiska-group/blacklist')
                print(f"–ö–∞–Ω–∞–ª {channel} –¥–æ–±–∞–≤–ª–µ–Ω –≤ blacklist.")
#–∫–æ–Ω–µ—Ü –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–æ–≤
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª {channel}: {e}")

if __name__ == "__main__":
    asyncio.run(main())
